#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at
# trunk/unboundid/resource/legal-notices/cddl.txt
# or http://www.opensource.org/licenses/cddl1.php.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at
# trunk/unboundid/resource/legal-notices/cddl.txt.  If applicable,
# add the following below this CDDL HEADER, with the fields enclosed
# by brackets "[]" replaced with your own identifying information:
#      Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
#      Portions Copyright 2007-2020 Ping Identity Corporation
#      Portions Copyright 2006-2008 Sun Microsystems, Inc.

UNBOUNDID_INVOKE_CLASS="com.unboundid.update.Updater"
export UNBOUNDID_INVOKE_CLASS

# Capture the current working directory so that we can change to it later.
# Then capture the location of this script and the server instance
# root so that we can use them to create appropriate paths.
WORKING_DIR=`pwd`

cd "`dirname "${0}"`"
SCRIPT_DIR=`pwd`

cd "${WORKING_DIR}"

INSTANCE_ROOT=${SCRIPT_DIR}
export INSTANCE_ROOT

SCRIPT_NAME="update"
export SCRIPT_NAME

# Since the server may be distributed without the JE jar file, make sure that
# it exists before continuing.  If it cannot be found, then instruct the user
# to download and install it.  Note that since the file name may vary, then
# we have to use a slightly awkward way of checking to see if it's there.
if test -f "${INSTANCE_ROOT}/lib/_require-je.sh"
then
  . "${INSTANCE_ROOT}/lib/_require-je.sh"
  if test ${MISSING_JE} -eq 1
  then
    exit 1
  fi
fi

# In most cases setup has probably not been run on the updating server
# package to configure the Java arguments for this script.  If this is
# the case fall back to default arguments.
if test ! -f "${INSTANCE_ROOT}/lib/set-java-home" -a -z "${UNBOUNDID_JAVA_ARGS}"
  then
    UNBOUNDID_JAVA_ARGS="-client -Xmx128m"
    export UNBOUNDID_JAVA_ARGS
  fi

# Set the classpath to include only the jars needed for the updater.
CLASSPATH=""
for JAR in "${INSTANCE_ROOT}"/lib/update/*.jar \
           "${INSTANCE_ROOT}"/lib/common-*.jar \
           "${INSTANCE_ROOT}"/lib/messages*.jar \
           "${INSTANCE_ROOT}"/lib/*ldapsdk*.jar \
           "${INSTANCE_ROOT}"/lib/config-framework-core*.jar \
           "${INSTANCE_ROOT}"/lib/license4j-*.jar \
           "${INSTANCE_ROOT}"/lib/guava-*.jar
  do
    CLASSPATH=${CLASSPATH}:${JAR}
  done

# Set Java and misc environment variables
SCRIPT_UTIL_CMD=set-java-home-and-args
export SCRIPT_UTIL_CMD
.  "${INSTANCE_ROOT}/lib/_script-util.sh"
RETURN_CODE=$?
if test ${RETURN_CODE} -ne 0
  then
    exit ${RETURN_CODE}
  fi
SCRIPT_UTIL_CMD=set-environment-vars
export SCRIPT_UTIL_CMD
.  "${INSTANCE_ROOT}/lib/_script-util.sh"
RETURN_CODE=$?
if test ${RETURN_CODE} -ne 0
  then
    exit ${RETURN_CODE}
  fi


# Launch the appropriate client utility.
"${PRIVATE_UNBOUNDID_JAVA_BIN}" -classpath "${CLASSPATH}" ${PRIVATE_UNBOUNDID_JAVA_ARGS} ${SCRIPT_NAME_ARG} "${UNBOUNDID_INVOKE_CLASS}" "${@}" --sourceRoot "${INSTANCE_ROOT}"
